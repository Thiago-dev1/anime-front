import type { NextPage } from 'next'
import Head from 'next/head'


import { useFormik } from "formik"
import * as Yup from "yup"
import { useContext, useEffect } from 'react';
import { AuthContext } from '../contexts/AuthContext';
import { useRouter } from 'next/router';


const Home: NextPage = () => {
  const router = useRouter()
  const { signIn } = useContext(AuthContext)


  const formik = useFormik({
    initialValues: {
      username: '',
      password: ''
    },
    validationSchema: Yup.object({
      username: Yup.string().required("Digite seu username!"),
      password: Yup.string().required("Digite sua senha")
    }),
    onSubmit: async (values) => {
      const data = {
        username: values.username,
        password: values.password
      }
      try {
        console.log("aqui")
        await signIn(data)
      } catch (error) {
        console.warn(error)
      }
    }
  })

  return ( 
    <div>
      <Head>
        <title>AnimeX</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div className="h-screen flex items-center">
          <div className="bg-gradient-to-r from-[#34265C]/60 via-[#754672]/60  to-[#34265C]/60 w-72 h-82 mx-auto p-10 flex flex-col gap-3 rounded">
            <form onSubmit={formik.handleSubmit}>
              <div className="flex flex-col gap-1">
                <label htmlFor="username">Usu√°rio</label>
                <input className="bg-transparent border-[3px] border-black focus:outline-[#1BA8DB]" id="username" type="text" onChange={formik.handleChange} value={formik.values.username} />
                {formik.touched.username && formik.errors.username ? <span className='text-red-600'>{formik.errors.username}</span> : null}
              </div>
              <div className="flex flex-col gap-1">
                <label htmlFor="password">Senha</label>
                <input className="bg-transparent border-[3px] border-black focus:outline-[#1BA8DB]" id="password" type="password" onChange={formik.handleChange} value={formik.values.password} />
                {formik.touched.password && formik.errors.password ? <span className='text-red-600'>{formik.errors.password}</span> : null}
              </div>
              <div className="flex justify-center mt-2">
                <button type='submit' className="bg-[#1BA8DB] hover:bg-blue-400 px-2 py-1 rounded">
                  Entrar
                </button>
              </div>
            </form>
            <a href="/cadastrar" className='text-center hover:text-black/70'>Cadastrar-se</a>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Home
